// Generated by data binding compiler. Do not edit!
package com.lkrh.storescontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.lkrh.storescontrol.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemStockcheckBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout lInput;

  @NonNull
  public final TextView tvCBatch;

  @NonNull
  public final TextView tvCInvCode;

  @NonNull
  public final TextView tvCInvStd;

  @NonNull
  public final TextView tvCPosName;

  @NonNull
  public final TextView tvCWhName;

  @NonNull
  public final TextView tvIQuantity;

  @NonNull
  public final TextView tvTag;

  protected ItemStockcheckBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout lInput, TextView tvCBatch, TextView tvCInvCode, TextView tvCInvStd,
      TextView tvCPosName, TextView tvCWhName, TextView tvIQuantity, TextView tvTag) {
    super(_bindingComponent, _root, _localFieldCount);
    this.lInput = lInput;
    this.tvCBatch = tvCBatch;
    this.tvCInvCode = tvCInvCode;
    this.tvCInvStd = tvCInvStd;
    this.tvCPosName = tvCPosName;
    this.tvCWhName = tvCWhName;
    this.tvIQuantity = tvIQuantity;
    this.tvTag = tvTag;
  }

  @NonNull
  public static ItemStockcheckBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_stockcheck, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemStockcheckBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemStockcheckBinding>inflateInternal(inflater, R.layout.item_stockcheck, root, attachToRoot, component);
  }

  @NonNull
  public static ItemStockcheckBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_stockcheck, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemStockcheckBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemStockcheckBinding>inflateInternal(inflater, R.layout.item_stockcheck, null, false, component);
  }

  public static ItemStockcheckBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemStockcheckBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemStockcheckBinding)bind(component, view, R.layout.item_stockcheck);
  }
}
