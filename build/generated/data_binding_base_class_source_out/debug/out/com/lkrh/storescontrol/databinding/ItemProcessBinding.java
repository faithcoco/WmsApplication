// Generated by data binding compiler. Do not edit!
package com.lkrh.storescontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.lkrh.storescontrol.R;
import com.lkrh.storescontrol.bean.ProcessBean;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemProcessBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout lInput;

  @NonNull
  public final RelativeLayout rlLayout;

  @NonNull
  public final TextView tvDone;

  @NonNull
  public final TextView tvProcessCcode;

  @NonNull
  public final TextView tvProcessCount;

  @NonNull
  public final TextView tvProcessName;

  @NonNull
  public final TextView tvProcessRowno;

  @NonNull
  public final TextView tvTag;

  @NonNull
  public final TextView tvUndone;

  @Bindable
  protected ProcessBean.Data mData;

  protected ItemProcessBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout lInput, RelativeLayout rlLayout, TextView tvDone, TextView tvProcessCcode,
      TextView tvProcessCount, TextView tvProcessName, TextView tvProcessRowno, TextView tvTag,
      TextView tvUndone) {
    super(_bindingComponent, _root, _localFieldCount);
    this.lInput = lInput;
    this.rlLayout = rlLayout;
    this.tvDone = tvDone;
    this.tvProcessCcode = tvProcessCcode;
    this.tvProcessCount = tvProcessCount;
    this.tvProcessName = tvProcessName;
    this.tvProcessRowno = tvProcessRowno;
    this.tvTag = tvTag;
    this.tvUndone = tvUndone;
  }

  public abstract void setData(@Nullable ProcessBean.Data data);

  @Nullable
  public ProcessBean.Data getData() {
    return mData;
  }

  @NonNull
  public static ItemProcessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_process, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemProcessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemProcessBinding>inflateInternal(inflater, R.layout.item_process, root, attachToRoot, component);
  }

  @NonNull
  public static ItemProcessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_process, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemProcessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemProcessBinding>inflateInternal(inflater, R.layout.item_process, null, false, component);
  }

  public static ItemProcessBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemProcessBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemProcessBinding)bind(component, view, R.layout.item_process);
  }
}
