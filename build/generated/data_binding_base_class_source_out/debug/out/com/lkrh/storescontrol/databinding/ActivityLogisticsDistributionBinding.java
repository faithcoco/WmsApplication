// Generated by data binding compiler. Do not edit!
package com.lkrh.storescontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.lkrh.storescontrol.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityLogisticsDistributionBinding extends ViewDataBinding {
  @NonNull
  public final Button bArrive;

  @NonNull
  public final Button bDepart;

  @NonNull
  public final EditText etPlate;

  @NonNull
  public final ImageButton ibUpload;

  @NonNull
  public final ImageView ivClear;

  @NonNull
  public final ImageView ivPlate;

  @NonNull
  public final LinearLayout lBatch;

  @NonNull
  public final RelativeLayout rlCwhcode;

  @NonNull
  public final TextView tvCvenbatch;

  @NonNull
  public final TextView tvTitle1;

  protected ActivityLogisticsDistributionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button bArrive, Button bDepart, EditText etPlate, ImageButton ibUpload,
      ImageView ivClear, ImageView ivPlate, LinearLayout lBatch, RelativeLayout rlCwhcode,
      TextView tvCvenbatch, TextView tvTitle1) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bArrive = bArrive;
    this.bDepart = bDepart;
    this.etPlate = etPlate;
    this.ibUpload = ibUpload;
    this.ivClear = ivClear;
    this.ivPlate = ivPlate;
    this.lBatch = lBatch;
    this.rlCwhcode = rlCwhcode;
    this.tvCvenbatch = tvCvenbatch;
    this.tvTitle1 = tvTitle1;
  }

  @NonNull
  public static ActivityLogisticsDistributionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_logistics_distribution, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLogisticsDistributionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityLogisticsDistributionBinding>inflateInternal(inflater, R.layout.activity_logistics_distribution, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityLogisticsDistributionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_logistics_distribution, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityLogisticsDistributionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityLogisticsDistributionBinding>inflateInternal(inflater, R.layout.activity_logistics_distribution, null, false, component);
  }

  public static ActivityLogisticsDistributionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityLogisticsDistributionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityLogisticsDistributionBinding)bind(component, view, R.layout.activity_logistics_distribution);
  }
}
